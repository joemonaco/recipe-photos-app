/**
 * This code was generated by v0 by Vercel.
 * @see https://v0.dev/t/8VWVkMBB6NO
 */
"use client";
import { Label } from "@/components/ui/label";
import { Input } from "@/components/ui/input";
import { Button } from "@/components/ui/button";
import UploadButton from "@/app/recipes/upload-button";
import { CldImage } from "next-cloudinary";
import { useState } from "react";

export function AddRecipePage() {
  const [selectedImage, setSelectedImage] = useState("");
  const [title, setTitle] = useState("");
  const [ingredients, setIngredients] = useState({});
  const [numIngredients, setNumIngredients] = useState(0);
  const [directions, setDirections] = useState([]);

  const [formData, setFormData] = useState({
    author: "joe",
    image_id: "",
    title: "",
    tags: [],
    ingredients: {},
    directions: [],
  });

  function handleCallback(imageId: string) {
    // Update the name in the component's state
    setSelectedImage(imageId);
  }

  const units = ["grams", "oz", "pieces", "pounds", "a", "b", "c"];

  function submitRecipe() {
    console.log("Button clicked");
  }

  function handleInput(e: any) {
    console.log(e);
    const fieldName = e.target.name;
    const fieldValue = e.target.value;

    setFormData((prevState) => ({
      ...prevState,
      [fieldName]: fieldValue,
    }));
  }

  return (
    <div className='w-full max-w-md p-6 space-y-4'>
      <div className='space-y-2'>
        <h1 className='text-2xl font-bold'>Add Recipe</h1>
        <p className='text-gray-500 dark:text-gray-400'>
          Enter the details of your recipe
        </p>
      </div>
      <form className='space-y-4'>
        <div className='space-y-2'>
          <Label htmlFor='image'>Image</Label>
          <div>
            {selectedImage == "" && (
              <UploadButton imageCallback={handleCallback} />
            )}
            {selectedImage != "" && (
              <CldImage
                width='200'
                height='200'
                style={{ objectFit: "cover" }}
                src={selectedImage}
                alt='Description of my image'
                className='object-cover w-full mt-2'
              />
            )}
          </div>
        </div>
        <div className='space-y-2'>
          <Label htmlFor='name'>Name</Label>
          <Input
            id='name'
            placeholder='Enter recipe name'
            onChange={handleInput}
            name='name'
          />
        </div>
        <div className='space-y-2'>
          <Label htmlFor='ingredients'>Ingredients</Label>
          <ol className='list-decimal space-y-2'>
            <li>
              <div className='flex items-center gap-2'>
                <Input id='ingredients' placeholder='Enter ingredient' />
                <Input id='quantity' placeholder='Enter quantity' />
                {numIngredients != 0 && (
                  <Button variant='outline'>
                    <svg
                      className='h-6 w-6'
                      fill='none'
                      stroke='currentColor'
                      viewBox='0 0 24 24'
                      xmlns='http://www.w3.org/2000/svg'
                    >
                      <path
                        d='M6 18L18 6M6 6l12 12'
                        strokeLinecap='round'
                        strokeLinejoin='round'
                        strokeWidth={2}
                      />
                    </svg>
                  </Button>
                )}
              </div>
            </li>
          </ol>
          <Button
            variant='outline'
            onClick={(e) => {
              e.preventDefault();
              setNumIngredients(numIngredients + 1);
            }}
          >
            Add Ingredient
          </Button>
        </div>
        <div className='space-y-2'>
          <Label htmlFor='directions'>Directions</Label>
          <ol className='list-decimal space-y-2'>
            <li>
              <div className='flex items-center gap-2'>
                <Input id='directions' placeholder='Enter direction' />
                {directions.length != 0 && (
                  <Button variant='outline'>
                    <svg
                      className='h-6 w-6'
                      fill='none'
                      stroke='currentColor'
                      viewBox='0 0 24 24'
                      xmlns='http://www.w3.org/2000/svg'
                    >
                      <path
                        d='M6 18L18 6M6 6l12 12'
                        strokeLinecap='round'
                        strokeLinejoin='round'
                        strokeWidth={2}
                      />
                    </svg>
                  </Button>
                )}
              </div>
            </li>
          </ol>
          <Button variant='outline'>Add Direction</Button>
        </div>
        <Button type='submit' onClick={submitRecipe}>
          Submit
        </Button>
      </form>
    </div>
  );
}
